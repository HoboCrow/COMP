State 16 conflicts: 7 reduce/reduce


Grammar

    0 $accept: prog $end

    1 prog: '(' expr ')'

    2 expr: '(' expr ')'
    3     | '+' expr expr
    4     | '/' expr expr
    5     | '*' expr expr
    6     | '-' expr expr
    7     | '-' NUMBER
    8     | NUMBER
    9     | REAL


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 2
')' (41) 1 2
'*' (42) 5
'+' (43) 3
'-' (45) 6 7
'/' (47) 4
error (256)
NUMBER (258) 7 8
REAL (259) 9


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
prog (12)
    on left: 1, on right: 0
expr (13)
    on left: 2 3 4 5 6 7 8 9, on right: 1 2 3 4 5 6


State 0

    0 $accept: . prog $end

    '('  shift, and go to state 1

    prog  go to state 2


State 1

    1 prog: '(' . expr ')'

    NUMBER  shift, and go to state 3
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 10


State 2

    0 $accept: prog . $end

    $end  shift, and go to state 11


State 3

    8 expr: NUMBER .

    $default  reduce using rule 8 (expr)


State 4

    9 expr: REAL .

    $default  reduce using rule 9 (expr)


State 5

    2 expr: '(' . expr ')'

    NUMBER  shift, and go to state 3
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 12


State 6

    3 expr: '+' . expr expr

    NUMBER  shift, and go to state 3
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 13


State 7

    4 expr: '/' . expr expr

    NUMBER  shift, and go to state 3
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 14


State 8

    5 expr: '*' . expr expr

    NUMBER  shift, and go to state 3
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 15


State 9

    6 expr: '-' . expr expr
    7     | '-' . NUMBER

    NUMBER  shift, and go to state 16
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 17


State 10

    1 prog: '(' expr . ')'

    ')'  shift, and go to state 18


State 11

    0 $accept: prog $end .

    $default  accept


State 12

    2 expr: '(' expr . ')'

    ')'  shift, and go to state 19


State 13

    3 expr: '+' expr . expr

    NUMBER  shift, and go to state 3
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 20


State 14

    4 expr: '/' expr . expr

    NUMBER  shift, and go to state 3
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 21


State 15

    5 expr: '*' expr . expr

    NUMBER  shift, and go to state 3
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 22


State 16

    7 expr: '-' NUMBER .
    8     | NUMBER .

    NUMBER    reduce using rule 7 (expr)
    NUMBER    [reduce using rule 8 (expr)]
    REAL      reduce using rule 7 (expr)
    REAL      [reduce using rule 8 (expr)]
    '('       reduce using rule 7 (expr)
    '('       [reduce using rule 8 (expr)]
    '+'       reduce using rule 7 (expr)
    '+'       [reduce using rule 8 (expr)]
    '/'       reduce using rule 7 (expr)
    '/'       [reduce using rule 8 (expr)]
    '*'       reduce using rule 7 (expr)
    '*'       [reduce using rule 8 (expr)]
    '-'       reduce using rule 7 (expr)
    '-'       [reduce using rule 8 (expr)]
    $default  reduce using rule 7 (expr)


State 17

    6 expr: '-' expr . expr

    NUMBER  shift, and go to state 3
    REAL    shift, and go to state 4
    '('     shift, and go to state 5
    '+'     shift, and go to state 6
    '/'     shift, and go to state 7
    '*'     shift, and go to state 8
    '-'     shift, and go to state 9

    expr  go to state 23


State 18

    1 prog: '(' expr ')' .

    $default  reduce using rule 1 (prog)


State 19

    2 expr: '(' expr ')' .

    $default  reduce using rule 2 (expr)


State 20

    3 expr: '+' expr expr .

    $default  reduce using rule 3 (expr)


State 21

    4 expr: '/' expr expr .

    $default  reduce using rule 4 (expr)


State 22

    5 expr: '*' expr expr .

    $default  reduce using rule 5 (expr)


State 23

    6 expr: '-' expr expr .

    $default  reduce using rule 6 (expr)
